---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusterscalingconstraints.sa.gardener.cloud
spec:
  group: sa.gardener.cloud
  names:
    kind: ClusterScalingConstraint
    listKind: ClusterScalingConstraintList
    plural: clusterscalingconstraints
    shortNames:
    - csc
    singular: clusterscalingconstraint
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterScalingConstraint is a schema to define constraints that
          will be used to create cluster scaling advises for a cluster.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the specification of the ClusterScalingConstraint.
            properties:
              consumerID:
                description: |-
                  ConsumerID is the ID of the consumer who creates the scaling constraint and is the target for cluster scaling advises.
                  It allows a consumer to accept or reject the advises by checking the ConsumerID for which the scaling advice has been created.
                type: string
              defaultBackoffPolicy:
                description: DefaultBackoffPolicy defines a default backoff policy
                  for all NodePools of a cluster. Backoff policy can be overridden
                  at the NodePool level.
                properties:
                  initialBackoff:
                    description: InitialBackoffDuration defines the lower limit of
                      the backoff duration.
                    type: string
                  maxBackoff:
                    description: MaxBackoffDuration defines the upper limit of the
                      backoff duration.
                    type: string
                required:
                - initialBackoff
                - maxBackoff
                type: object
              instancePricing:
                description: InstancePricing is a list of instance pricing for the
                  node pool.
                items:
                  description: InstancePricing contains the pricing information for
                    an instance type.
                  properties:
                    instanceType:
                      description: InstanceType is the instance type of the node template.
                      type: string
                    price:
                      description: Price is the total price of the instance type.
                      format: double
                      type: number
                    unitCPUPrice:
                      description: UnitCPUPrice is the price per CPU of the instance
                        type.
                      format: double
                      type: number
                    unitMemoryPrice:
                      description: UnitMemoryPrice is the price per memory of the
                        instance type.
                      format: double
                      type: number
                  required:
                  - instanceType
                  - price
                  type: object
                type: array
              nodePools:
                description: NodePools is the list of node pools to choose from when
                  creating scaling advice.
                items:
                  description: NodePool defines a node pool configuration for a cluster.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a map of key/value pairs for annotations
                        applied to all the nodes in this node pool.
                      type: object
                    availabilityZones:
                      description: AvailabilityZones is a list of availability zones
                        for the node pool.
                      items:
                        type: string
                      type: array
                    defaultBackoffPolicy:
                      description: BackoffPolicy defines the backoff policy applicable
                        to resource exhaustion of any instance type + zone combination
                        in this node pool.
                      properties:
                        initialBackoff:
                          description: InitialBackoffDuration defines the lower limit
                            of the backoff duration.
                          type: string
                        maxBackoff:
                          description: MaxBackoffDuration defines the upper limit
                            of the backoff duration.
                          type: string
                      required:
                      - initialBackoff
                      - maxBackoff
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a map of key/value pairs for labels applied
                        to all the nodes in this node pool.
                      type: object
                    name:
                      description: Name is the name of the node pool. It must be unique
                        within the cluster.
                      type: string
                    nodeTemplates:
                      description: NodeTemplates is a slice of NodeTemplate.
                      items:
                        description: |-
                          NodeTemplate defines a node template configuration for an instance type.
                          All nodes of a certain instance type in a node pool will be created using this template.
                        properties:
                          architecture:
                            description: Architecture is the architecture of the instance
                              type.
                            type: string
                          capacity:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: Capacity defines the capacity of resources
                              that are available for this instance type.
                            type: object
                          evictionThreshold:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              EvictionThreshold defines the threshold beyond which kubelet will start to evict pods. If defined this will be used to compute
                              the allocatable for a Node for the node template so that we prevent over provisioning of resources during simulation runs.
                              See https://github.com/kubernetes/design-proposals-archive/blob/main/node/kubelet-eviction.md#eviction-thresholds for more information.
                              Soft eviction thresholds are not supported as they are enforced upon expiry of a grace period. For a scaling recommender it is not possible
                              to determine what will change while waiting for the grace period. Therefore, only hard eviction thresholds should be specified.
                            type: object
                          instanceType:
                            description: InstanceType is the instance type of the
                              node template.
                            type: string
                          kubeReservedCapacity:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              KubeReserved defines the capacity for kube reserved resources.
                              See https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/#kube-reserved for additional information.
                            type: object
                          maxVolumes:
                            description: MaxVolumes is the max number of volumes that
                              can be attached to a node of this instance type.
                            format: int32
                            type: integer
                          name:
                            description: Name is the name of the node template.
                            type: string
                          priority:
                            description: Priority is the priority of the node template.
                              The lower the number, the higher the priority.
                            type: integer
                          systemReservedCapacity:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              SystemReserved defines the capacity for system reserved resources.
                              See https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/#system-reserved for additional information.
                              Please read https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/#general-guidelines when deciding to
                            type: object
                        required:
                        - architecture
                        - capacity
                        - instanceType
                        - maxVolumes
                        - name
                        - priority
                        type: object
                      type: array
                    quota:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: Quota defines the quota for the node pool.
                      type: object
                    region:
                      description: Region is the name of the region.
                      type: string
                    scaleInPolicy:
                      description: ScaleInPolicy defines the scale in policy for this
                        node pool.
                      type: object
                    taints:
                      description: Taints is a list of taints applied to all the nodes
                        in this node pool.
                      items:
                        description: |-
                          The node this Taint is attached to has the "effect" on
                          any pod that does not tolerate the Taint.
                        properties:
                          effect:
                            description: |-
                              Required. The effect of the taint on pods
                              that do not tolerate the taint.
                              Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Required. The taint key to be applied to
                              a node.
                            type: string
                          timeAdded:
                            description: |-
                              TimeAdded represents the time at which the taint was added.
                              It is only written for NoExecute taints.
                            format: date-time
                            type: string
                          value:
                            description: The taint value corresponding to the taint
                              key.
                            type: string
                        required:
                        - effect
                        - key
                        type: object
                      type: array
                  required:
                  - annotations
                  - availabilityZones
                  - defaultBackoffPolicy
                  - labels
                  - name
                  - nodeTemplates
                  - quota
                  - region
                  - taints
                  type: object
                type: array
              scaleInPolicy:
                description: ScaleInPolicy defines the default scale in policy to
                  be used when scaling in a node pool.
                type: object
            required:
            - consumerID
            - instancePricing
            - nodePools
            type: object
          status:
            description: Status defines the status of the ClusterScalingConstraint.
            properties:
              conditions:
                description: Conditions contains the conditions for the ClusterScalingConstraint.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
